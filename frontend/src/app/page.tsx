/**
 * Dashboard Page
 * –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å placeholder –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 */

'use client';

import { useEffect, useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { healthCheck } from '@/lib/api';

export default function DashboardPage() {
  const [apiStatus, setApiStatus] = useState<'checking' | 'online' | 'offline'>('checking');

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
    healthCheck()
      .then(() => setApiStatus('online'))
      .catch(() => setApiStatus('offline'));
  }, []);

  return (
    <div className="space-y-6">
      <div>
        <h1 className="text-3xl font-bold">Dashboard</h1>
        <p className="text-gray-600">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Telegram –±–æ—Ç–∞</p>
      </div>

      {/* API Status */}
      <Card>
        <CardHeader>
          <CardTitle>–°—Ç–∞—Ç—É—Å Backend API</CardTitle>
          <CardDescription>–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ http://localhost:8000</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="flex items-center gap-2">
            {apiStatus === 'checking' && <Badge variant="secondary">–ü—Ä–æ–≤–µ—Ä–∫–∞...</Badge>}
            {apiStatus === 'online' && (
              <>
                <Badge className="bg-green-500">‚úì –û–Ω–ª–∞–π–Ω</Badge>
                <span className="text-sm text-gray-600">API –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ</span>
              </>
            )}
            {apiStatus === 'offline' && (
              <>
                <Badge variant="destructive">‚úó –û—Ñ–ª–∞–π–Ω</Badge>
                <span className="text-sm text-gray-600">
                  –ó–∞–ø—É—Å—Ç–∏—Ç–µ API: <code className="bg-gray-100 px-2 py-1 rounded">make api-run</code>
                </span>
              </>
            )}
          </div>
        </CardContent>
      </Card>

      {/* Placeholder –¥–ª—è Dashboard */}
      <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
        {['Total Users', 'Total Messages', 'Deleted Messages', 'Avg Message Length'].map(
          (metric) => (
            <Card key={metric}>
              <CardHeader className="pb-2">
                <CardDescription>{metric}</CardDescription>
                <CardTitle className="text-3xl">-</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-xs text-gray-600">SP-FE-3: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è dashboard</p>
              </CardContent>
            </Card>
          )
        )}
      </div>

      {/* Info Card */}
      <Card>
        <CardHeader>
          <CardTitle>üöÄ SP-FE-2 –ó–∞–≤–µ—Ä—à–µ–Ω!</CardTitle>
          <CardDescription>Frontend –∫–∞—Ä–∫–∞—Å –ø—Ä–æ–µ–∫—Ç–∞ –≥–æ—Ç–æ–≤</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-2 text-sm">
            <p>‚úÖ Next.js 14+ —Å App Router</p>
            <p>‚úÖ TypeScript strict mode</p>
            <p>‚úÖ shadcn/ui –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã</p>
            <p>‚úÖ Tailwind CSS –Ω–∞—Å—Ç—Ä–æ–µ–Ω</p>
            <p>‚úÖ API –∫–ª–∏–µ–Ω—Ç —Å —Ç–∏–ø–∞–º–∏ —Å–æ–∑–¥–∞–Ω</p>
            <p>‚úÖ Layout –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã</p>
            <p className="pt-2 font-medium">
              –°–ª–µ–¥—É—é—â–∏–π —Å–ø—Ä–∏–Ω—Ç: SP-FE-3 - –†–µ–∞–ª–∏–∑–∞—Ü–∏—è dashboard
            </p>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
