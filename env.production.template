# =============================================================================
# PRODUCTION ENVIRONMENT CONFIGURATION
# =============================================================================
# 
# Этот файл содержит шаблон всех переменных окружения для production развертывания.
# 
# ВАЖНО:
# 1. Скопируйте этот файл в .env: cp env.production.template .env
# 2. Заполните все обязательные переменные (помеченные как REQUIRED)
# 3. НЕ коммитьте .env в git (он в .gitignore)
# 4. Храните .env в безопасном месте
#
# =============================================================================

# =============================================================================
# TELEGRAM BOT CONFIGURATION
# =============================================================================

# Токен Telegram бота (получить у @BotFather)
# REQUIRED: Обязательная переменная
# Формат: 123456789:ABCdefGHIjklMNOpqrsTUVwxyz
# Пример: 1234567890:AAHdqTcvCH1vGWJxfSeofSAs0K5PALDsaw
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here

# Приветственное сообщение бота
# OPTIONAL: Можно оставить значение по умолчанию
# Используется при команде /start
WELCOME_MESSAGE=Привет! Я AI-ассистент на базе LLM. Задавай любые вопросы, и я постараюсь помочь!

# =============================================================================
# LLM (OPENROUTER) CONFIGURATION
# =============================================================================

# API ключ OpenRouter (получить на https://openrouter.ai/)
# REQUIRED: Обязательная переменная
# Формат: sk-or-v1-...
OPENROUTER_API_KEY=your_openrouter_api_key_here

# Базовый URL OpenRouter API
# OPTIONAL: Стандартное значение обычно не требует изменений
OPENROUTER_BASE_URL=https://openrouter.ai/api/v1

# Модель LLM для использования
# OPTIONAL: Можно выбрать другую модель из каталога OpenRouter
# Популярные модели:
#   - anthropic/claude-3.5-sonnet (рекомендуется для production)
#   - openai/gpt-4-turbo
#   - google/gemini-pro
#   - meta-llama/llama-3.1-70b-instruct (бесплатная)
OPENROUTER_MODEL=anthropic/claude-3.5-sonnet

# Максимальное количество сообщений в контексте беседы
# OPTIONAL: Влияет на память бота в диалоге
# Рекомендуется: 10-20 для баланса между памятью и стоимостью
MAX_CONTEXT_MESSAGES=10

# =============================================================================
# SYSTEM PROMPTS CONFIGURATION
# =============================================================================

# Путь к файлу с системным промптом по умолчанию
# OPTIONAL: Изменяет поведение бота (роль, стиль общения)
# Доступные промпты:
#   - prompts/nutritionist.txt (диетолог-консультант)
#   - prompts/text2sql.txt (аналитик для SQL запросов)
SYSTEM_PROMPT_FILE=prompts/nutritionist.txt

# Системный промпт по умолчанию (если файл не найден)
# OPTIONAL: Резервное значение
DEFAULT_SYSTEM_PROMPT=Ты полезный AI-ассистент. Отвечай на вопросы пользователя четко и профессионально.

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Путь к файлу базы данных SQLite
# REQUIRED: Обязательная переменная
# В контейнере путь: /app/data/bot.db
# На хосте мапится в: ./data/bot.db
DATABASE_PATH=data/bot.db

# Примечание: SQLite используется для простоты развертывания
# Для production с высокой нагрузкой рекомендуется PostgreSQL

# =============================================================================
# API CONFIGURATION
# =============================================================================

# URL API для frontend приложения
# REQUIRED: Обязательная переменная для работы frontend
# Формат: http://IP:PORT или https://domain.com
# 
# ВАЖНО: Это build-time переменная для Next.js!
# При изменении необходим rebuild frontend контейнера:
# docker compose -f docker-compose.prod.yml up -d --build frontend
#
# Для локальной разработки: http://localhost:8000
# Для production: http://92.255.78.249:8006
NEXT_PUBLIC_API_URL=http://92.255.78.249:8006

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Тег Docker образа для использования
# OPTIONAL: По умолчанию используется latest
# Можно указать конкретную версию, например: v1.0.0, sha-abc1234
IMAGE_TAG=latest

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Уровень логирования
# OPTIONAL: DEBUG, INFO, WARNING, ERROR, CRITICAL
# Для production рекомендуется INFO или WARNING
LOG_LEVEL=INFO

# Путь к директории с логами
# OPTIONAL: В контейнере мапится в /app/logs
LOG_DIR=logs

# =============================================================================
# PRODUCTION DEPLOYMENT INFO
# =============================================================================
# 
# Информация о production сервере:
# - IP: 92.255.78.249
# - User: systech
# - Рабочая директория: /opt/systech/oleg_h
# - Порты:
#   * Frontend: 3006 (внешний) -> 3000 (внутри контейнера)
#   * API: 8006 (внешний) -> 8000 (внутри контейнера)
#   * Bot: без внешних портов (только внутренняя сеть)
#
# Docker образы:
# - ghcr.io/oleg-khalyava/systech-aidd-test-bot:latest
# - ghcr.io/oleg-khalyava/systech-aidd-test-api:latest
# - ghcr.io/oleg-khalyava/systech-aidd-test-frontend:latest
#
# =============================================================================

# =============================================================================
# SECURITY NOTES
# =============================================================================
#
# 1. Никогда не коммитьте файл .env в git
# 2. Используйте сильные, уникальные токены и пароли
# 3. Регулярно ротируйте секретные ключи
# 4. Ограничьте доступ к серверу (firewall, SSH keys only)
# 5. Используйте HTTPS в production (настройка SSL/TLS)
# 6. Регулярно создавайте резервные копии БД
# 7. Мониторьте логи на предмет подозрительной активности
#
# =============================================================================

# =============================================================================
# QUICK START
# =============================================================================
#
# 1. Скопируйте этот файл:
#    cp env.production.template .env
#
# 2. Заполните обязательные переменные:
#    - TELEGRAM_BOT_TOKEN
#    - OPENROUTER_API_KEY
#    - NEXT_PUBLIC_API_URL (для production: http://92.255.78.249:8006)
#
# 3. (Опционально) Настройте другие параметры под ваши нужды
#
# 4. Проверьте конфигурацию:
#    cat .env | grep -E "TELEGRAM_BOT_TOKEN|OPENROUTER_API_KEY|NEXT_PUBLIC_API_URL"
#
# 5. Скопируйте .env на сервер:
#    scp -i ~/.ssh/id_rsa_systech .env systech@92.255.78.249:/opt/systech/oleg_h/
#
# =============================================================================

