name: Build and Push Docker Images

on:
  push:
    branches:
      - day-6-devops
  pull_request:
    branches:
      - day-6-devops

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - service: bot
            context: .
            dockerfile: ./devops/bot.Dockerfile
          - service: api
            context: .
            dockerfile: ./devops/api.Dockerfile
          - service: frontend
            context: ./frontend
            dockerfile: ../devops/frontend.Dockerfile

    steps:
      # 1. Checkout кода
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup Docker Buildx (для advanced features и caching)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Login в GitHub Container Registry (только для push, не для PR)
      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 4. Генерация метаданных (tags, labels)
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}
          tags: |
            type=raw,value=latest
            type=sha,prefix=sha-
          labels: |
            org.opencontainers.image.title=${{ github.repository }}-${{ matrix.service }}
            org.opencontainers.image.description=Docker image for ${{ matrix.service }} service

      # 5. Build и Push Docker образа
      - name: Build and push Docker image (${{ matrix.service }})
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.service }}
          cache-to: type=gha,mode=max,scope=${{ matrix.service }}
          build-args: |
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VERSION=${{ github.sha }}

      # 6. Вывод информации о собранном образе
      - name: Image digest
        run: |
          echo "Service: ${{ matrix.service }}"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Version: ${{ github.sha }}"

